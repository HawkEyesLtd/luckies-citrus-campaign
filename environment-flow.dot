digraph EnvironmentFlow {
    rankdir=TB;
    node [shape=box, style=filled];

    // Developer actions
    dev [label="Developer\nruns:", fillcolor=lightblue];
    npm_start [label="npm start", fillcolor=lightgreen];
    npm_build [label="npm run build", fillcolor=orange];

    // Environment files
    env_dev [label=".env.development\n\nREACT_APP_API_BASE_URL=\nhttps://comm.hedigital.net/api/v1", fillcolor=lightyellow];
    env_prod [label=".env.production\n\nREACT_APP_API_BASE_URL=\nhttps://comm.hedigital.net/api/v1", fillcolor=lightyellow];

    // React processing
    react_dev [label="React (NODE_ENV=development)", fillcolor=lightcyan];
    react_prod [label="React (NODE_ENV=production)", fillcolor=lightcyan];

    // Config module
    config [label="src/config/api.js\n\nconst config = {\n  apiBaseUrl: process.env.REACT_APP_API_BASE_URL\n}", fillcolor=lightgray];

    // Application
    app_dev [label="App uses DEV config", fillcolor=lightgreen];
    app_prod [label="App uses PROD config", fillcolor=orange];

    // Flow for development
    dev -> npm_start;
    npm_start -> react_dev [label="automatically"];
    react_dev -> env_dev [label="loads"];
    env_dev -> config [label="provides"];
    config -> app_dev;

    // Flow for production
    dev -> npm_build;
    npm_build -> react_prod [label="automatically"];
    react_prod -> env_prod [label="loads"];
    env_prod -> config [label="provides"];
    config -> app_prod;

    // Legend
    subgraph cluster_legend {
        label = "How It Works";
        style = "dashed";
        note1 [label="âœ¨ AUTOMATIC\nNo manual changes needed!", shape=note, fillcolor=lightyellow];
        note2 [label="ðŸ”µ Development\nðŸŸ¢ Production\nSame command, different result!", shape=note, fillcolor=lightcyan];
    }
}
