name: Build and Deploy

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build project
        run: pnpm run build
        env:
          # The .env.production file is automatically used
          # You can override specific values here if needed:
          # REACT_APP_API_BASE_URL: ${{ secrets.PROD_API_URL }}
          CI: false  # Prevents treating warnings as errors

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-files
          path: build/
          retention-days: 7

  deploy-production:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-files
          path: build/

      - name: Deploy to Production
        run: |
          echo "Deploy to your hosting service here"
          # Example for various services:

          # GitHub Pages:
          # - uses: peaceiris/actions-gh-pages@v3
          #   with:
          #     github_token: ${{ secrets.GITHUB_TOKEN }}
          #     publish_dir: ./build

          # Netlify:
          # - uses: netlify/actions/cli@master
          #   with:
          #     args: deploy --prod --dir=build
          #   env:
          #     NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          #     NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

          # AWS S3:
          # - run: aws s3 sync build/ s3://your-bucket-name --delete
          #   env:
          #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          #     AWS_REGION: us-east-1
